#include<bits/stdc++.h>
using namespace std;


struct Node
{
    public:
    int data;
    Node* link;
    Node* prev;
         Node(int data){
        this->data = data;
        link = NULL;
        prev = NULL;
    }
};


void dubblyremove(Node* Head, int Element){
    Node* ptr = Head;
    while (ptr->data != Element)
    {
        ptr = ptr->link;
    }
    if (ptr->link != NULL)
    {
        ptr->link->prev = ptr->prev;
        ptr->prev->link = ptr->link;
    }
    else
    {
        ptr->prev->link = NULL;
    }
    free(ptr);
    return;

}
int main()
{
    int Element;

    cout << "ENTER THE ELEMENT WHICH IS TO BE REMOVED FROM THE LIST (1 6 22 3):";
    cin >> Element;
    Node* Head = new Node(1);
    Node* Second = new Node(6);
    Node* Third = new Node(22);
    Node* Fourth = new Node(3);

    Head->link = Second;
    Second->link = Third;
    Third->link = Fourth;
    Fourth->link = NULL;

    Fourth->prev = Third;
    Third->prev = Second;
    Second->prev = Head;
    Head->prev = NULL;
    if (Head->data == Element)
    {
        Head = Head->link;
        Node* Temp = Head;
    while (Temp != NULL)
    {
        cout << Temp->data << " ";
        Temp = Temp->link;
    }
    }
    else {
    dubblyremove(Head,Element);
    Node* Temp = Head;
    while (Temp != NULL)
    {
        cout << Temp->data << " ";
        Temp = Temp->link;
    }
    }
    
    return 0;
}